<%- include('partials/header', { title: title || 'System Logs' }) %>

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">System Logs</h1>
        <div>
            <a href="/admin" class="btn btn-outline-primary">
                <i class="fas fa-arrow-left me-1"></i>Back to Dashboard
            </a>
        </div>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">System Logs</h5>
            <div class="btn-group btn-group-sm">
                <button class="btn btn-light" id="refreshLogs">
                    <i class="fas fa-sync me-1"></i>Refresh
                </button>
                <button class="btn btn-light" id="clearLogs">
                    <i class="fas fa-trash me-1"></i>Clear
                </button>
                <button class="btn btn-light" id="downloadLogs">
                    <i class="fas fa-download me-1"></i>Download
                </button>
            </div>
        </div>
        <div class="card-body p-0">
            <!-- Filter Controls -->
            <div class="p-3 bg-light border-bottom">
                <div class="row g-3">
                    <div class="col-md-3">
                        <select class="form-select form-select-sm" id="logLevelFilter">
                            <option value="all">All Levels</option>
                            <option value="info">INFO</option>
                            <option value="warning">WARNING</option>
                            <option value="error">ERROR</option>
                            <option value="debug">DEBUG</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <select class="form-select form-select-sm" id="logSourceFilter">
                            <option value="all">All Sources</option>
                            <option value="app.js">app.js</option>
                            <option value="authController.js">authController.js</option>
                            <option value="apiController.js">apiController.js</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <div class="input-group input-group-sm">
                            <input type="text" class="form-control" placeholder="Filter by message..." id="logMessageFilter">
                            <button class="btn btn-outline-secondary" type="button">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="d-grid">
                            <button class="btn btn-sm btn-outline-primary" id="applyFilters">Apply Filters</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Logs Table -->
            <div class="table-responsive" style="max-height: 500px; overflow-y: auto;">
                <table class="table table-hover table-striped mb-0">
                    <thead class="sticky-top bg-light">
                        <tr>
                            <th>Timestamp</th>
                            <th>Level</th>
                            <th>Source</th>
                            <th>Message</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (logs && logs.length > 0) { %>
                            <% logs.forEach((log, index) => { %>
                                <tr>
                                    <td><%= log.timestamp.toLocaleString() %></td>
                                    <td>
                                        <span class="badge <%= 
                                            log.level === 'ERROR' ? 'bg-danger' : 
                                            log.level === 'WARNING' ? 'bg-warning text-dark' : 
                                            log.level === 'INFO' ? 'bg-info text-dark' : 
                                            'bg-secondary' 
                                        %>"><%= log.level %></span>
                                    </td>
                                    <td><%= log.source %></td>
                                    <td><%= log.message %></td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-secondary" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#logDetailModal"
                                                data-log-index="<%= index %>">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="5" class="text-center py-3">No logs available</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer">
            <div class="d-flex justify-content-between align-items-center">
                <span><%= logs ? logs.length : 0 %> logs found</span>
                <div>
                    <select class="form-select form-select-sm d-inline-block w-auto">
                        <option value="25">25 per page</option>
                        <option value="50">50 per page</option>
                        <option value="100">100 per page</option>
                    </select>
                    <nav class="d-inline-block ms-2">
                        <ul class="pagination pagination-sm mb-0">
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1">Previous</a>
                            </li>
                            <li class="page-item active">
                                <a class="page-link" href="#">1</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="#">Next</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Log Detail Modal -->
<div class="modal fade" id="logDetailModal" tabindex="-1" role="dialog" aria-labelledby="logDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="logDetailModalLabel">Log Entry Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <strong>Timestamp:</strong>
                        <span id="modalTimestamp"></span>
                    </div>
                    <div class="col-md-6">
                        <strong>Level:</strong>
                        <span id="modalLevel"></span>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <strong>Source:</strong>
                        <span id="modalSource"></span>
                    </div>
                    <div class="col-md-6">
                        <strong>User:</strong>
                        <span id="modalUser">N/A</span>
                    </div>
                </div>
                <div class="mb-3">
                    <strong>Message:</strong>
                    <p id="modalMessage"></p>
                </div>
                <div class="mb-3">
                    <strong>Stack Trace:</strong>
                    <pre id="modalStack" class="border p-3 bg-light" style="max-height: 200px; overflow-y: auto;">No stack trace available</pre>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Store logs in JavaScript for filtering
        const logs = <% if (logs && logs.length > 0) { %><%- JSON.stringify(logs) %><% } else { %>[]<% } %>;
        
        // Log detail modal
        const logDetailModal = document.getElementById('logDetailModal');
        if (logDetailModal) {
            logDetailModal.addEventListener('show.bs.modal', function(event) {
                const button = event.relatedTarget;
                const logIndex = button.getAttribute('data-log-index');
                const log = logs[logIndex];
                
                if (log) {
                    document.getElementById('modalTimestamp').textContent = new Date(log.timestamp).toLocaleString();
                    document.getElementById('modalLevel').textContent = log.level;
                    document.getElementById('modalSource').textContent = log.source;
                    document.getElementById('modalMessage').textContent = log.message;
                    
                    // Add sample stack trace for error logs
                    if (log.level === 'ERROR') {
                        document.getElementById('modalStack').textContent = `Error: ${log.message}\n    at ${log.source}:10:15\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)`;
                    } else {
                        document.getElementById('modalStack').textContent = 'No stack trace available';
                    }
                }
            });
        }
        
        // Filter logs
        const applyFilters = document.getElementById('applyFilters');
        if (applyFilters) {
            applyFilters.addEventListener('click', function() {
                const levelFilter = document.getElementById('logLevelFilter').value;
                const sourceFilter = document.getElementById('logSourceFilter').value;
                const messageFilter = document.getElementById('logMessageFilter').value.toLowerCase();
                
                // In a real implementation, this would make an AJAX request to the server
                // For this demo, we'll just show an alert
                alert(`Applied filters: Level=${levelFilter}, Source=${sourceFilter}, Message contains "${messageFilter}"`);
            });
        }
        
        // Refresh logs button
        const refreshLogs = document.getElementById('refreshLogs');
        if (refreshLogs) {
            refreshLogs.addEventListener('click', function() {
                // In a real implementation, this would make an AJAX request to refresh logs
                // For this demo, we'll just reload the page
                window.location.reload();
            });
        }
        
        // Clear logs button
        const clearLogs = document.getElementById('clearLogs');
        if (clearLogs) {
            clearLogs.addEventListener('click', function() {
                if (confirm('Are you sure you want to clear all logs? This action cannot be undone.')) {
                    // In a real implementation, this would make an AJAX request to clear logs
                    alert('Logs cleared successfully');
                    
                    // For this demo, we'll just reload the page
                    window.location.reload();
                }
            });
        }
        
        // Download logs button
        const downloadLogs = document.getElementById('downloadLogs');
        if (downloadLogs) {
            downloadLogs.addEventListener('click', function() {
                // In a real implementation, this would generate a file download
                alert('Logs downloaded successfully');
            });
        }
    });
</script>

<%- include('partials/footer') %>
